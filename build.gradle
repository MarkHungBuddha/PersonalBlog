plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'org.redBuddha'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.4.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
    implementation group: 'com.alibaba.fastjson2', name: 'fastjson2', version: '2.0.53'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

spotless {
    java {
        googleJavaFormat()
        removeUnusedImports()
        licenseHeader '/*\n * Copyright (c) $YEAR - redBuddhaHung.\n  */'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
